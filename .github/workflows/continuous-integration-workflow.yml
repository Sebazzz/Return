name: Continuous integration
on: push

jobs:
    build:
        name: Build and test ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [windows-2019, ubuntu-22.04]
                include:
                    - os: windows-2019
                      script_name: .\build.cmd
                    - os: ubuntu-22.04
                      script_name: ./build.sh
        steps:
            - name: checkout
              uses: actions/checkout@v1

            - name: Download and install node.js
              uses: actions/setup-node@v1
              with:
                  node-version: '10.x'

            - name: Install Microsoft Edge (Ubuntu)
              if: matrix.os == 'ubuntu-22.04'
              run: |
                  curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
                  sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
                  sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge.list'
                  sudo apt-get update && sudo apt -y install microsoft-edge-stable

            - name: Install Microsoft Edge (Windows)
              if: matrix.os == 'windows-2019'
              uses: browser-actions/setup-edge@latest
              with:
                  edge-version: 'stable'

            - name: Install .NET 6.x SDK for build
              uses: actions/setup-dotnet@v2
              with:
                  dotnet-version: '6.0.300'

            - name: Output important software versions (node)
              run: node --version

            - name: Output important software versions (yarn)
              run: yarn --version

            - name: Output important software versions (dotnet)
              run: dotnet --version

            - name: Build - restore nuget packages
              run: ${{ matrix.script_name }} --target=restore-nuget-packages --verbosity=verbose

            - name: Build - restore node packages
              run: ${{ matrix.script_name }} --target=restore-node-packages --verbosity=verbose

            - name: Build - test
              env:
                  MOZ_HEADLESS: 1
                  CIRCLECI: 1
                  RETURN_TEST_WAIT_TIME: 30
              run: ${{ matrix.script_name }} --target=test --use-code-coverage=false --verbosity=verbose

            - name: Upload artifacts
              uses: actions/upload-artifact@v1
              continue-on-error: true
              if: always()
              with:
                  name: logs
                  path: build/testresults
